<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.yz.entity.Role" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="ROLE_DESC" property="roleDesc" jdbcType="VARCHAR" />
    <result column="ROLE_STATE" property="roleState" jdbcType="DECIMAL" />
    <result column="IS_ALL_AUTH" property="isAllAuth" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="DATE" />
    <result column="UPDATE_DATE" property="updateDate" jdbcType="DATE" />
    <result column="user_id" property="userId" />
  </resultMap>
  
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ROLE_NAME, ROLE_DESC, ROLE_STATE, IS_ALL_AUTH, CREATE_DATE, UPDATE_DATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yz.entity.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from T_SYS_ROLE
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from T_SYS_ROLE
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.yz.entity.RoleExample" >
    delete from T_SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yz.entity.Role" >
    insert into T_SYS_ROLE (ID, ROLE_NAME, ROLE_DESC, 
      ROLE_STATE, IS_ALL_AUTH, CREATE_DATE, 
      UPDATE_DATE)
    values (#{id,jdbcType=DECIMAL}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{roleState,jdbcType=DECIMAL}, #{isAllAuth,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, 
      #{updateDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.yz.entity.Role" >
    insert into T_SYS_ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
        ID,
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="roleDesc != null" >
        ROLE_DESC,
      </if>
      <if test="roleState != null" >
        ROLE_STATE,
      </if>
      <if test="isAllAuth != null" >
        IS_ALL_AUTH,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
     seq_hr.nextval,
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleState != null" >
        #{roleState,jdbcType=DECIMAL},
      </if>
      <if test="isAllAuth != null" >
        #{isAllAuth,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yz.entity.RoleExample" resultType="java.lang.Integer" >
    select count(*) from T_SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_SYS_ROLE
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.roleName != null" >
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleDesc != null" >
        ROLE_DESC = #{record.roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.roleState != null" >
        ROLE_STATE = #{record.roleState,jdbcType=DECIMAL},
      </if>
      <if test="record.isAllAuth != null" >
        IS_ALL_AUTH = #{record.isAllAuth,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.updateDate != null" >
        UPDATE_DATE = #{record.updateDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_SYS_ROLE
    set ID = #{record.id,jdbcType=DECIMAL},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      ROLE_DESC = #{record.roleDesc,jdbcType=VARCHAR},
      ROLE_STATE = #{record.roleState,jdbcType=DECIMAL},
      IS_ALL_AUTH = #{record.isAllAuth,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=DATE},
      UPDATE_DATE = #{record.updateDate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yz.entity.Role" >
    update T_SYS_ROLE
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleState != null" >
        ROLE_STATE = #{roleState,jdbcType=DECIMAL},
      </if>
      <if test="isAllAuth != null" >
        IS_ALL_AUTH = #{isAllAuth,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=DATE},
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE = #{updateDate,jdbcType=DATE},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yz.entity.Role" >
    update T_SYS_ROLE
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      ROLE_STATE = #{roleState,jdbcType=DECIMAL},
      IS_ALL_AUTH = #{isAllAuth,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=DATE},
      UPDATE_DATE = #{updateDate,jdbcType=DATE}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.yz.entity.RoleExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
   <select id="findroleByRoleID" resultMap="BaseResultMap" parameterType="int" >
   select ro.*, sur.user_id
      from t_sys_role ro
  			left join t_sys_user_rol sur on ro.id = sur.role_id
                 and sur.user_id =#{userId}
  	
  </select>
</mapper>